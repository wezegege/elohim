{
    "metadata": {
        "name": "pig",
        "min-players": 2,
        "max-players": 5,
        "clients": [
            "random-bot",
            "turn-total-bot",
            "pig-bot",
            "basic-console"
        ]
    },
    "settings": [
        {
            "name" : "goal",
            "type" : "integer",
            "min" : 10,
            "max" : 1000,
            "default" : 100
        },
        {
            "name" : "dice::count",
            "type" : "integer",
            "min" : 1,
            "max" : 10,
            "default" : 1
        },
        {
            "name" : "dice::size",
            "type" : "integer",
            "min" : 2,
            "max" : 10,
            "default" : 6
        },
        {
            "name" : "dice::wrong",
            "type" : "integer_list",
            "min" : 1,
            "max" : "dice::size",
            "default" : [1]
        }
        ],
    "defaults": {
        "score::permanent" : 0,
        "score::temporary" : 0
    },
    "rules": {
        "actions": [
            {
                "actions": [
                    {
                        "actions": [
                            {
                                "destination": "move", 
                                "library": "input", 
                                "name": "ask-player", 
                                "options": {
                                    "hold": "Hold points", 
                                    "roll": "Roll a dice"
                                }
                            }, 
                            {
                                "condition": {
                                    "expressions": [
                                        {
                                            "library": "expression", 
                                            "name": "player-variable", 
                                            "variable": "move"
                                        }, 
                                        {
                                            "library": "expression", 
                                            "name": "value", 
                                            "value": "roll"
                                        }
                                    ], 
                                    "library": "condition", 
                                    "name": "equals"
                                }, 
                                "iffalse": [
                                    {
                                        "destination": "score::permanent", 
                                        "library": "data", 
                                        "name": "tranfer-current", 
                                        "origin": "score::temporary"
                                    }, 
                                    {
                                        "library": "data", 
                                        "name": "set-current", 
                                        "value": false, 
                                        "variable": "turn"
                                    }
                                ], 
                                "iftrue": [
                                    {
                                        "destination": "roll::dice", 
                                        "library": "random", 
                                        "name": "roll-dice-current", 
                                        "size": {
                                            "library": "expression",
                                            "name": "variable",
                                            "variable": "dice::size"
                                        }

                                    }, 
                                    {
                                        "condition": {
                                            "element": {
                                                    "library": "expression", 
                                                    "name": "player-variable", 
                                                    "variable": "roll::dice"
                                            }, 
                                            "list": {
                                                    "library": "expression", 
                                                    "name": "variable", 
                                                    "variable": "dice::wrong"
                                            },
                                            "library": "condition", 
                                            "name": "in"
                                        }, 
                                        "iffalse": [
                                            {
                                                "destination": "score::temporary", 
                                                "library": "data", 
                                                "name": "tranfer-current", 
                                                "origin": "roll::dice"
                                            }, 
                                            {
                                                "condition": {
                                                    "left": {
                                                        "expressions": [
                                                            {
                                                                "library": "expression", 
                                                                "name": "player-variable", 
                                                                "variable": "score::permanent"
                                                            }, 
                                                            {
                                                                "library": "expression", 
                                                                "name": "player-variable", 
                                                                "variable": "score::temporary"
                                                            }
                                                        ], 
                                                        "library": "expression", 
                                                        "name": "sum"
                                                    }, 
                                                    "library": "condition", 
                                                    "name": "greater-equals", 
                                                    "right": {
                                                        "library": "expression", 
                                                        "name": "variable",
                                                        "variable": "goal"
                                                    }
                                                }, 
                                                "iffalse": [], 
                                                "iftrue": [
                                                    {
                                                        "destination": "score::permanent", 
                                                        "library": "data", 
                                                        "name": "tranfer-current", 
                                                        "origin": "score::temporary"
                                                    }, 
                                                    {
                                                        "library": "data", 
                                                        "name": "set-current", 
                                                        "value": false, 
                                                        "variable": "turn"
                                                    }
                                                ], 
                                                "library": "core", 
                                                "name": "if"
                                            }
                                        ], 
                                        "iftrue": [
                                            {
                                                "library": "data", 
                                                "name": "set-current", 
                                                "value": 0, 
                                                "variable": "score::temporary"
                                            }, 
                                            {
                                                "library": "data", 
                                                "name": "set-current", 
                                                "value": false, 
                                                "variable": "turn"
                                            }
                                        ], 
                                        "library": "core", 
                                        "name": "if"
                                    }
                                ], 
                                "library": "core", 
                                "name": "if"
                            }
                        ], 
                        "library": "data", 
                        "name": "while-current-true", 
                        "variable": "turn"
                    }
                ], 
                "condition": {
                    "condition": {
                        "left": {
                            "library": "expression", 
                            "name": "variable",
                            "variable": "goal"
                        }, 
                        "library": "condition", 
                        "name": "greater", 
                        "right": {
                            "library": "expression", 
                            "name": "player-variable", 
                            "variable": "score::permanent"
                        }
                    }, 
                    "library": "condition", 
                    "name": "all"
                }, 
                "library": "core", 
                "name": "foreach-while"
            }, 
            {
                "criteria": "score::permanent", 
                "library": "core", 
                "name": "set-winner"
            }
        ], 
        "library": "core", 
        "name": "sequence"
    }
}
